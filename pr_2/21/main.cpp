#include <iostream>
#include <climits>

template <typename T>
T найтиВторойМакс(const T* массив, size_t размер) {
    if (размер < 2) {
        throw std::invalid_argument("Размер массива должен быть не менее 2");
    }

    T максимум = массив[0];
    T второйМаксимум = массив[1];

    if (второйМаксимум > максимум) {
        std::swap(максимум, второйМаксимум);
    }

    for (size_t i = 2; i < размер; ++i) {
        if (массив[i] > максимум) {
            второйМаксимум = максимум;
            максимум = массив[i];
        } else if (массив[i] > второйМаксимум && массив[i] != максимум) {
            второйМаксимум = массив[i];
        }
    }

    if (максимум == второйМаксимум) {
        throw std::runtime_error("Все элементы одинаковы, нет второго максимума");
    }

    return второйМаксимум;
}

int main() {
    try {
        int целочисленныйМассив[] = {5, 2, 9, 1, 7, 9};
        size_t размерЦел = sizeof(целочисленныйМассив) / sizeof(целочисленныйМассив[0]);
        std::cout << "Второй максимум (int): " << найтиВторойМакс(целочисленныйМассив, размерЦел) << std::endl;

        double дробныйМассив[] = {3.5, 1.2, 6.7, 2.1, 6.7};
        size_t размерДроб = sizeof(дробныйМассив) / sizeof(дробныйМассив[0]);
        std::cout << "Второй максимум (double): " << найтиВторойМакс(дробныйМассив, размерДроб) << std::endl;

        char символьныйМассив[] = {'z', 'a', 'm', 'z', 'b'};
        size_t размерСимв = sizeof(символьныйМассив) / sizeof(символьныйМассив[0]);
        std::cout << "Второй максимум (char): " << найтиВторойМакс(символьныйМассив, размерСимв) << std::endl;

    } catch (const std::exception& e) {
        std::cerr << "Ошибка: " << e.what() << std::endl;
    }

    return 0;
}